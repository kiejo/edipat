//mylang 0.1

// data types
//Object: {a: "hello" b: 44}
//Number: 3 57.4
//String: "Hello World"
//Boolean: true false
//Comment: //asdkfjaskldjf

//var declaration
(def name "Johnny")
(def user {name: "kiejo" age: 21})

//access object fields
(.name user)
(map .name user_list) //is a normal function

//function definition
(def add a b
	(+ a b))

//lambda
(fn a b (+ a b))

//curried functions
(add 2)   // (fn a (add 2 a))
(add _ 2) // (fn a (add a 2))

//pattern matching
(match [1 2 3 4 5 6]
	([1 2 a]           a)
	([_ _ 3 _ : rest] (tail rest))
	([1 a _ b _]      (lst a b)))

(match {a: "hello" b: 10}
	({a: info    b: 10}  info)
	({a: "hello" b: num} (add num 2))
	({a: _ }             "has key a, ignore b"))

//pattern matching fn args
(def twenties {name: n age: 20}
	(str n " is 20 years old"))

(def my_sum
	([]      0)
	([x : xs] (x + (my_sum xs))))

//macros
(macro case args
	(def el (head args))
	(map (fn [val f] (quote (if (= el val) (f))) (tail args))))


(case "Ok"
	("hello" "matched hello")
	("error" "matched error")
	("Ok"    (str "matched" " " "correctly")))